port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: false
udp: true

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true

    geox-url:
  geoip: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/geoip/release/geoip.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb"
  asn: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-ASN.mmdb"

select: &select {type: select, include-all: true, url: http://1.1.1.1/generate_204}
s: &s {type: select, proxies: [DIRECT, Clash], url: http://1.1.1.1/generate_204}
c: &c {type: http, behavior: classical, url: http://1.1.1.1/generate_204, interval: 86400}
d: &d {type: http, behavior: domain, url: http://1.1.1.1/generate_204, interval: 86400}
i: &i {type: http,  behavior: ipcidr, interval: 86400}
p: &p {type: http, interval: 21600, health-check: {enable: true, url: http://1.1.1.1/generate_204, interval: 600}}

proxy-providers:
  Sub1: {<<: *p, path: ./proxy-providers/Sub1.yaml, url: }   
  Sub2: {<<: *p, path: ./proxy-providers/Sub2.yaml, url: }   

proxies: 

proxy-groups:
  - {name: Clash, type: select, use: [Sub1,Sub2], filter: "^(?!.*?使用)^(?!.*?更新)^(?!.*?剩余)^(?!.*?到期)^(?!.*?不可)^(?!.*?官)", icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/refs/heads/main/src-tauri/icons/128x128@2x.png}
  - {name: Spotify, type: select, proxies: [DIRECT], filter: ".*(US|🇺🇸|美国)", use: [Sub1,Sub2, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png}
  - {name: China, type: select, proxies: [DIRECT, Clash], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png}
  - {name: Final, type: select, proxies: [DIRECT, Clash], icon: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/icon/qure/color/Final.png}


rule-providers:
  LocalAreaNetwork: {<<: *c, path: ./rule-providers/LocalAreaNetwork.yaml,  url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/LocalAreaNetwork.yaml}
  UnBan: {<<: *c, path: ./rule-providers/UnBan.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/UnBan.yaml}
  Direct: {<<: *c, path: ./rule-providers/Direct.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Direct.yaml}
  GoogleCN: {<<: *c, path: ./rule-providers/GoogleCN.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/GoogleCN.yaml}
  SteamCN: {<<: *c, path: ./rule-providers/SteamCN.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/SteamCN.yaml}
  Apple_Domain: {<<: *d, path: ./rule-providers/Apple_Domain.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Apple_Domain.yaml}
  Apple: {<<: *c, path: ./rule-providers/Apple.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Apple.yaml}
  Microsoft: {<<: *c, path: ./rule-providers/Microsoft.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Microsoft.yaml}
  Spotify: {<<: *c, path: ./rule-providers/Spotify.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Spotify.yaml}
  ProxyMedia: {<<: *c, path: ./rule-providers/ProxyMedia.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ProxyMedia.yaml}
  ProxyGFWlist: {<<: *c, path: ./rule-providers/ProxyGFWlist.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ProxyGFWlist.yaml}
  ProxyList: {<<: *c, path: ./rule-providers/ProxyList.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ProxyLite.yaml}
  Proxy: {<<: *c, path: ./rule-providers/Proxy.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Proxy.yaml}
  ChinaMedia: {<<: *c, path: ./rule-providers/ChinaMedia.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaMedia.yaml}
  ChinaDomain: {<<: *d, path: ./rule-providers/ChinaDomain.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaDomain.yaml}
  ChinaIp: {<<: *i, path: ./rule-providers/ChinaIp.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaIp.yaml}
  ChinaCompanyIp: {<<: *i, path: ./rule-providers/ChinaCompanyIp.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaCompanyIp.yaml}
  Download: {<<: *c, path: ./rule-providers/Download.yaml, url: https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Download.yaml}

rules:
  - RULE-SET,LocalAreaNetwork,China
  - RULE-SET,UnBan,China
  - RULE-SET,Direct,China
  - RULE-SET,GoogleCN,China
  - RULE-SET,SteamCN,China
  - RULE-SET,Apple_Domain,China
  - RULE-SET,Apple,China
  - RULE-SET,Microsoft,China
  - RULE-SET,Spotify,Spotify
  - RULE-SET,ProxyMedia,Clash
  - RULE-SET,ProxyGFWlist,Clash
  - RULE-SET,ProxyList,Clash
  - RULE-SET,Proxy,Clash
  - RULE-SET,ChinaMedia,China
  - RULE-SET,ChinaDomain,China
  - RULE-SET,ChinaIp,China
  - RULE-SET,ChinaCompanyIp,China
  - RULE-SET,Download,China
  - GEOIP,CN,China
  - MATCH,Final

