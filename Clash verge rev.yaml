port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: false
udp: true

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true

geox-url:
  geoip: "https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat"
  geosite: "https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat"
  mmdb: "https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb"
  asn: "https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb"

select: &select {type: select, include-all: true, url: http://www.google.com/blank.html}
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
s: &s {type: select, proxies: [DIRECT, Clash], url: http://www.google.com/blank.html}
c: &c {type: http, behavior: classical, url: http://www.google.com/blank.html, interval: 86400}
d: &d {type: http, behavior: domain, url: http://www.google.com/blank.html, interval: 86400}
i: &i {type: http,  behavior: ipcidr, interval: 86400}
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://www.google.com/blank.html', interval: 6}}


proxy-providers: 
  Sub1:
    url: ''
    <<: *NodeParam
    path: './proxy_providers/Sub1.yaml'
    override:
      additional-prefix: "[Sub1]"
  Sub2:
    url: ''
    <<: *NodeParam
    path: './proxy_providers/Sub2.yaml'
    override:
      additional-prefix: "[Sub2]"

proxies:

proxy-groups:
  - {name: FlClash, type: select, proxies: [DIRECT,UrlHK,UrlJP,UrlSG,UrlUS], use: [Sub1,Sub2], filter: "^(?!.*?使用)^(?!.*?更新)^(?!.*?剩余)^(?!.*?到期)^(?!.*?不可)^(?!.*?官)"}
  - {name: Netflix, type: select, proxies: [DIRECT,FallHK,FallJP,FallSG,FallUS], use: [Sub1,Sub2], filter: "^(?!.*?使用)^(?!.*?更新)^(?!.*?剩余)^(?!.*?到期)^(?!.*?不可)^(?!.*?官)"}
  - {name: Spotify, type: select, proxies: [DIRECT,UrlUS]}
  - {name: China, type: select, proxies: [DIRECT, FlClash]}
  - {name: UrlHK, type: url-test, interval: 6, tolerance: 20, lazy: true, disable-udp: false, timeout: 300, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(HK|香港)"}
  - {name: UrlJP, type: url-test, interval: 6, tolerance: 20, lazy: true, disable-udp: false, timeout: 300, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(JP|日本)"}
  - {name: UrlSG, type: url-test, interval: 6, tolerance: 20, lazy: true, disable-udp: false, timeout: 300, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(SG|新加坡)"}
  - {name: UrlUS, type: url-test, interval: 6, tolerance: 20, lazy: true, disable-udp: false, timeout: 800, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(US|美国)"}
  - {name: FallHK, type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 300, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(HK|香港)"}
  - {name: FallJP, type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 300, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(JP|日本)"}
  - {name: FallSG, type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 300, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(SG|新加坡)"}
  - {name: FallUS, type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 800, max-failed-times: 3, hidden: true, include-all-providers: true, use: [Sub1,Sub2], filter: ".*(US|美国)"}

rule-providers:
  LocalAreaNetwork:
    <<: *c
    path: './rule-providers/LocalAreaNetwork.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/LocalAreaNetwork.yaml'
  UnBan:
    <<: *c
    path: './rule-providers/UnBan.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/UnBan.yaml'
  GoogleCN:
    <<: *c
    path: './rule-providers/GoogleCN.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/GoogleCN.yaml'
  SteamCN:
    <<: *c
    path: './rule-providers/SteamCN.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/SteamCN.yaml'
  Tencent:
    <<: *c
    path: './rule-providers/Tencent.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Tencent.yaml'
  NetEase:
    <<: *c
    path: './rule-providers/NetEase.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/NetEase.yaml'
  Apple_Domain:
    <<: *d
    path: './rule-providers/Apple_Domain.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Apple_Domain.yaml'
  Apple:
    <<: *c
    path: './rule-providers/Apple.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Apple.yaml'
  Microsoft:
    <<: *c
    path: './rule-providers/Microsoft.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Microsoft.yaml'
  Spotify:
    <<: *c
    path: './rule-providers/Spotify.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Spotify.yaml'
  Netflix:
    <<: *c
    path: './rule-providers/Netflix.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Netflix.yaml'
  ProxyMedia:
    <<: *c
    path: './rule-providers/ProxyMedia.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ProxyMedia.yaml'
  ProxyGFWlist:
    <<: *c
    path: './rule-providers/ProxyGFWlist.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ProxyGFWlist.yaml'
  ChinaMedia:
    <<: *c
    path: './rule-providers/ChinaMedia.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaMedia.yaml'
  ChinaDomain:
    <<: *d
    path: './rule-providers/ChinaDomain.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaDomain.yaml'
  ChinaCompanyIp:
    <<: *i
    path: './rule-providers/ChinaCompanyIp.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaCompanyIp.yaml'
  Download:
    <<: *c
    path: './rule-providers/Download.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/Download.yaml'
  ChinaIp:
    <<: *i
    path: './rule-providers/ChinaIp.yaml'
    url: 'https://raw.githubusercontent.com/mybeXX/Rules/refs/heads/main/rule/Clash/ChinaIp.yaml'

rules:
  - RULE-SET,LocalAreaNetwork,China
  - RULE-SET,UnBan,China
  - RULE-SET,GoogleCN,China
  - RULE-SET,SteamCN,China
  - RULE-SET,Tencent,China
  - RULE-SET,NetEase,China
  - RULE-SET,Apple_Domain,China
  - RULE-SET,Apple,China
  - RULE-SET,Microsoft,China
  - RULE-SET,Spotify,Spotify
  - RULE-SET,Netflix,Netflix
  - RULE-SET,ProxyMedia,FlClash
  - RULE-SET,ProxyGFWlist,FlClash
  - RULE-SET,ChinaMedia,China
  - RULE-SET,ChinaDomain,China
  - RULE-SET,ChinaCompanyIp,China
  - RULE-SET,ChinaIp,China
  - RULE-SET,Download,China
  - GEOIP,CN,China
  - MATCH,FlClash
